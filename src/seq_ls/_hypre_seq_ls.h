/******************************************************************************
 * Copyright (c) 1998 Lawrence Livermore National Security, LLC and other
 * HYPRE Project Developers. See the top-level COPYRIGHT file for details.
 *
 * SPDX-License-Identifier: (Apache-2.0 OR MIT)
 ******************************************************************************/

/*** DO NOT EDIT THIS FILE DIRECTLY (use 'headers' to generate) ***/

#ifndef hypre_SEQ_LS_HEADER
#define hypre_SEQ_LS_HEADER

#include <HYPRE_config.h>
#include "seq_mv.h"

#ifdef __cplusplus
extern "C" {
#endif

#ifndef hypre_DIRECT_SOLVER_DATA_HEADER
#define hypre_DIRECT_SOLVER_DATA_HEADER

/*--------------------------------------------------------------------------
 * hypre_DirectSolverData
 *--------------------------------------------------------------------------*/

typedef struct hypre_DirectSolverData_struct
{
   HYPRE_Int            option;
   HYPRE_Int            info;

#if defined (HYPRE_USING_CUSOLVER)
   cusolverDnHandle_t   cusolver_handle;
#endif
} hypre_DirectSolverData;

/*--------------------------------------------------------------------------
 *  Accessor functions for the hypre_DirectSolverData structure
 *--------------------------------------------------------------------------*/

#define hypre_DirectSolverDataOption(data)          ((data) -> option)
#define hypre_DirectSolverDataInfo(data)            ((data) -> info)
#define hypre_DirectSolverDataCuSolverHandle(data)  ((data) -> cusolver_handle)

#endif

/* direct_solver.c */
void*     hypre_DirectSolverCreate ( HYPRE_Int option );
HYPRE_Int hypre_DirectSolverDestroy ( void *vdata );
HYPRE_Int hypre_DirectSolverSetup ( void *direct_vdata, hypre_DenseMatrix *A, hypre_Vector *f, hypre_Vector *u );
HYPRE_Int hypre_DirectSolverSolve ( void *direct_vdata, hypre_DenseMatrix *A, hypre_Vector *f, hypre_Vector *u );

/* direct_cusolver.c */
#if defined (HYPRE_USING_CUSOLVER)
void*     hypre_DirectSolverCreateCuSolver ( void );
HYPRE_Int hypre_DirectSolverDestroyCuSolver ( void *direct_vdata );
HYPRE_Int hypre_DirectSolverSetupCuSolver ( void *direct_vdata, hypre_DenseMatrix *A, hypre_Vector *f, hypre_Vector *u );
HYPRE_Int hypre_DirectSolverSolveCuSolver ( void *direct_vdata, hypre_DenseMatrix *A, hypre_Vector *f, hypre_Vector *u );
#endif

/* direct_magma.c */
#if defined (HYPRE_USING_MAGMA)
void*     hypre_DirectSolverCreateMagma ( void );
HYPRE_Int hypre_DirectSolverDestroyMagma ( void *direct_vdata );
HYPRE_Int hypre_DirectSolverSetupMagma ( void *direct_vdata, hypre_DenseMatrix *A, hypre_Vector *f, hypre_Vector *u );
HYPRE_Int hypre_DirectSolverSolveMagma ( void *direct_vdata, hypre_DenseMatrix *A, hypre_Vector *f, hypre_Vector *u );
#endif

#ifdef __cplusplus
}
#endif

#endif

